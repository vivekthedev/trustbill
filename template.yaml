AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  TrustBill - A serverless application to prevent invoice fraud by verifying the authenticity of invoices using AWS services.

# Globals:

Resources:
  TrustedVendorsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-TrustedVendors
      AttributeDefinitions:
        - AttributeName: vendorId
          AttributeType: S
        - AttributeName: VendorEmail
          AttributeType: S
      KeySchema:
        - AttributeName: vendorId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: VendorEmailIndex
          KeySchema:
            - AttributeName: VendorEmail
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  InvoicesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-Invoices
      AttributeDefinitions:
        - AttributeName: invoiceId
          AttributeType: S
        - AttributeName: VendorEmail
          AttributeType: S
      KeySchema:
        - AttributeName: invoiceId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
        - IndexName: VendorEmailIndex
          KeySchema:
            - AttributeName: VendorEmail
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  RestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      TracingEnabled: true
      Tags:
        Name: !Sub ${AWS::StackName}-API
        Stack: !Sub ${AWS::StackName}

  DataRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      TracingEnabled: true
      Cors:
        AllowMethods: '''GET,PUT,POST,OPTIONS'''
        AllowHeaders: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'''
        AllowOrigin: '''*'''
      Tags:
        Name: !Sub ${AWS::StackName}-DataAPI
        Stack: !Sub ${AWS::StackName}

  InvoicesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-invoices
      AccessControl: PublicRead
      VersioningConfiguration:
        Status: Enabled

  InvoiceExtractedRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Rule to trigger verification of invoice data
      EventPattern:
        source:
          - trustbill.extract
        detail-type:
          - InvoiceExtracted
      Targets:
        - Arn: !GetAtt VerifyFunction.Arn
          Id: VerifyFunctionTarget

  EventBridgeInvokeVerifyPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref VerifyFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt InvoiceExtractedRule.Arn

  ExtractFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: extract.lambda_handler
      CodeUri: trustbill/extract/
      Runtime: python3.13
      Timeout: 180
      Architectures:
        - x86_64
      Environment:
        Variables:
          InvoicesBucket: !Ref InvoicesBucket
      Policies:
        - AmazonBedrockFullAccess
        - AmazonEventBridgeFullAccess
        - S3WritePolicy:
            BucketName: !Ref InvoicesBucket
      Events:
        NewInvoiceEvent:
          Type: Api
          Properties:
            RestApiId: !Ref RestApi
            Path: /webhook
            Method: post

  VerifyFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: verify.lambda_handler
      CodeUri: trustbill/verify/
      Runtime: python3.13
      Timeout: 180
      Architectures:
        - x86_64
      Environment:
        Variables:
          TrustedVendorsTable: !Ref TrustedVendorsTable
          InvoicesTable: !Ref InvoicesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TrustedVendorsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref InvoicesTable

  DataFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: data.lambda_handler
      CodeUri: trustbill/data/
      Runtime: python3.13
      Timeout: 180
      Architectures:
        - x86_64
      Environment:
        Variables:
          TrustedVendorsTable: !Ref TrustedVendorsTable
          InvoicesTable: !Ref InvoicesTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TrustedVendorsTable
        - DynamoDBCrudPolicy:
            TableName: !Ref InvoicesTable
      Events:
        GetDataEvent:
          Type: Api
          Properties:
            RestApiId: !Ref DataRestApi
            Path: /invoices
            Method: GET

        UnflagInvoiceEvent:
          Type: Api
          Properties:
            RestApiId: !Ref DataRestApi
            Path: /invoices/{invoiceId}
            Method: PUT

        AddVendorEvent:
          Type: Api
          Properties:
            RestApiId: !Ref DataRestApi
            Path: /invoices/vendors/add
            Method: POST

Outputs:
  TrustedVendorsTable:
    Description: Trusted Vendors Table
    Value: !Ref TrustedVendorsTable

  InvoicesTable:
    Description: Invoices Table
    Value: !Ref InvoicesTable

  RestApi:
    Description: API Gateway URL
    Value: !Sub https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/prod

  DataRestApi:
    Description: Data API Gateway URL
    Value: !Sub https://${DataRestApi}.execute-api.${AWS::Region}.amazonaws.com/prod